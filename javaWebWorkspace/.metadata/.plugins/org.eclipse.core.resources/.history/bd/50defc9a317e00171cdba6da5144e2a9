import java.util.Arrays;

public class test {
	public static void heapSort(int[] arr) {
		for (int i = arr.length / 2; i >= 0; i--) {
			heapAdjust(arr, i, arr.length);
		}

		for (int i = arr.length - 1; i >= 0; i--) {
			int temp = arr[i];
			arr[i] = arr[0];
			arr[0] = temp;
			
			heapAdjust(arr, 0, i);
		}
	}

	private static void heapAdjust(int[] arr, int parent, int length) {
		// TODO Auto-generated method stub
		int temp = arr[parent];
		int child = 2 * parent + 1;

		while (child < length) {

			if (child + 1 < length && arr[child + 1] > arr[child]) {
				child++;
			}

			if (temp > arr[child]) {
				break;
			} else {
				arr[parent] = arr[child];
			}

			parent = child;
			child = 2 * parent + 1;
		}
			arr[parent] = temp;
	}
	public static void main(String[] args) {
		int[] arr={6,3,7,1,5,4,2};
		System.out.println(Arrays.toString(arr));
		heapSort(arr);
		System.out.println(Arrays.toString(arr ));
	}
}
