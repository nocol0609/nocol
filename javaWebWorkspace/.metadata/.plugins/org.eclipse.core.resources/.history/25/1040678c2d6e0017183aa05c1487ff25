package com.hbase.api;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HColumnDescriptor;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.client.Admin;
import org.apache.hadoop.hbase.client.Connection;
import org.apache.hadoop.hbase.client.ConnectionFactory;
import org.apache.hadoop.hbase.client.HBaseAdmin;
import org.junit.Test;

public class HbaseDemo {
	
	@Test
	public void createTable (){
		
		try {
			
			//创建HbaseAdmin对象
			Configuration configuration=new Configuration();
			
			//连接zookeeper集群  
			configuration.set("hbase.zookeeper.quorum", "192.168.44.129：2181");
			
			//获取连接
			Connection connection = ConnectionFactory.createConnection(configuration);
			
			//获取admin
			Admin admin = connection.getAdmin();
			
//			HBaseAdmin admin=new HBaseAdmin(configuration);
			
/*			//判断要创建的表是否存在，若存在就删除
			if(admin.tableExists("students")){
				admin.disableTable("students");
				admin.deleteTable("students");
			}*/
			
			//创建表描述对象
			HTableDescriptor tableDescriptor=new HTableDescriptor("students"); 
			
			//创建列族描述对象
			HColumnDescriptor columnDescriptor =new HColumnDescriptor("info");
			
			//启动读缓存
			columnDescriptor.setBlockCacheEnabled(true);
			//是否要加载到内存
			columnDescriptor.setInMemory(false);
			//设置最大版本数
			columnDescriptor.setMaxVersions(1);
			
			//为表指定列族
			tableDescriptor.addFamily(columnDescriptor);	
			
			//创建表
			admin.createTable(tableDescriptor);
			
			System.out.println("创建表成功");
					
		}catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
