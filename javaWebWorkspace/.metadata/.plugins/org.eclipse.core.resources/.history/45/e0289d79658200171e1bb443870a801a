package com.nocol.tree;

/**
 * 二叉树
 * 
 * @author Nocol 下午5:05:34
 */
public class Tree {
	// 根节点
	private Node root;

	/**
	 * 插入节点
	 */
	public void insert(long value) {

		// 封装插入的节点
		Node newNode = new Node(value);
		// 引用当前节点
		Node current = root;
		// 引用父节点
		Node parent;
		// 判断root是否为null，即第一次插入的时候
		if (root == null) {
			root = newNode;
			return;
		} else {
			while (true) {
				// 若root不为空，则让当前节点为父节点
				parent = current;
				// 如果新插入的节点比当前节点小，则往左走
				if (value < current.data) {
					current = current.leftChild;
				} else {
					current = current.rigthChild;
				}
			}
		}

	}

	/**
	 * 查找节点
	 */
	public void find(long value) {

	}

	/**
	 * 删除节点
	 */
	public void delete(long value) {

	}
}
