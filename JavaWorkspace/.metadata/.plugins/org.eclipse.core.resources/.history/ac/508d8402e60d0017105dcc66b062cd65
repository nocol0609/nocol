package com.nocol.collection;

import java.util.Comparator;
import java.util.TreeSet;

import javax.rmi.CORBA.Tie;

/**
 * @author lxp
 *
 * @TODO
 * 
 */
/*
 * class Teacher implements Comparable<Object>{ private String name; private int
 * age;
 * 
 * public Teacher() { super(); // TODO Auto-generated constructor stub }
 * 
 * public Teacher(String name, int age) { super(); this.name = name; this.age =
 * age; }
 * 
 * public String getName() { return name; }
 * 
 * public void setName(String name) { this.name = name; }
 * 
 * public int getAge() { return age; }
 * 
 * public void setAge(int age) { this.age = age; }
 * 
 * @Override public String toString() { return "Teacher [name=" + name +
 * ", age=" + age + "]"; }
 * 
 * @Override public int compareTo(Object o) {//自然排序：默认升序 // TODO Auto-generated
 * method stub Teacher teacher=(Teacher)o; //按年龄排 //当前减去传入：升序 //return
 * this.age-teacher.age; //传入减去当前是：降序 //return teacher.age-this.age; //按姓名排
 * //return teacher.name.compareTo(this.name);//升序 return
 * this.name.compareTo(teacher.name);//降序
 * 
 * }
 * 
 * }
 */
class Teacher  {
	private String name;
	private int age;

	public Teacher() {
		super();
		// TODO Auto-generated constructor stub
	}

	public Teacher(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	@Override
	public String toString() {
		return "Teacher [name=" + name + ", age=" + age + "]";
	}
}

class TeacherCompartor implements Comparator<Teacher>{

	@Override
	public int compare(Teacher t1, Teacher t2) {
		// TODO Auto-generated method stub
		
		if(t1.getAge()>t2.getAge()) return 1;
		
		else if (t1.getAge()<t2.getAge()) return -1;
		
		else return 0;
			
	}
	
}

public class TreeSetTest {
	public static void main(String[] args) {
		Teacher t1 = new Teacher("tom", 20);
		Teacher t2 = new Teacher("rose", 21);
		Teacher t3 = new Teacher("jack", 22);
	//	TreeSet<Teacher> ts = new TreeSet<Teacher>();
		
		TeacherCompartor tCompartor=new TeacherCompartor();
		TreeSet<Teacher> ts=new TreeSet<Teacher>();

		ts.add(t1);
		ts.add(t2);
		ts.add(t3);
		for (Teacher t : ts) {
			System.out.println(t);
		}
	}
}
