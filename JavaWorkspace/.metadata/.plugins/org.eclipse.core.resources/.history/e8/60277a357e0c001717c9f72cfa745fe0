package com.dom4j;

import java.io.File;
import java.util.Iterator;
import java.util.List;

import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;
import org.junit.Test;

/**
 * @author lxp
 *
 * @TODO
 * 
 */
public class Dom4jTest {
	/**
	 * 拿到节点信息
	 * 
	 * @throws Exception
	 */
	@Test
	public void test() throws Exception {
		// 创建xml解析器
		SAXReader reader = new SAXReader();
		// 读取xml文件并返回xml文档对象(document)
		Document document = reader.read(new File("./src/contact.xml"));
		// 利用文档对象获取子节点
		Iterator<Node> iterator = document.nodeIterator();// 不包括孙节点
		while (iterator.hasNext()) {// 判断是否有下一个元素
			// 取出节点
			Node node = iterator.next();// Node是所有节点的抽象
			// 获取节点名称
			String name = node.getName();
			System.out.println(name);
			// 继续取出其下面的子节点
			// 只有标签节点才有子节点
			// 判断当前节点是否是标签节点
			if (node instanceof Element) {
				// 将Node对象节点node强转为Element标签节点
				Element element = (Element) node;
				Iterator<Node> iterator2 = element.nodeIterator();
				while (iterator2.hasNext()) {
					Node node2 = iterator2.next();
					System.out.println(node2.getName());
				}
			}
		}
	}

	/**
	 * 遍历xml中所有节点
	 * 
	 * @throws Exception
	 */
	@Test
	public void test2() throws Exception {
		// 创建xml解析器
		SAXReader reader = new SAXReader();
		// 读取xml文件并返回xml文档对象(document)
		Document document = reader.read(new File("./src/contact.xml"));
		// 获取根节点
		Element rootElement = document.getRootElement();
		// 调用获取标签下是所有子节点
		getChildNode(rootElement);
	}

	/**
	 * 获取传入的标签的所有子节点
	 * 
	 * @param element
	 */
	private void getChildNode(Element element) {
		System.out.println(element.getName());
		// 传入的标签可能会有子节点
		Iterator<Node> iterator = element.nodeIterator();
		// 遍历节点
		while (iterator.hasNext()) {
			Node node = iterator.next();
			// 判断是否为标签节点
			if (node instanceof Element) {
				// 强转为标签节点
				Element element2 = (Element) node;
				// 再取出该标签节点下的所有子节点(递归)
				getChildNode(element2);
			}
		}
	}

	/**
	 * 获取标签
	 * 
	 * @throws Exception
	 */
	@Test
	public void test3() throws Exception {
		// 创建xml解析器
		SAXReader reader = new SAXReader();
		// 读取xml文件并返回xml文档对象(document)
		Document document = reader.read(new File("./src/contact.xml"));

		// 1获取根标签
		Element rootElement = document.getRootElement();
		System.out.println(rootElement.getName());

		// // 2获取当前标签下指定的第一个标签
		// Element contactEle = rootElement.element("contact");
		// System.out.println(contactEle.getName());

		// // 3获取当前标签下指定名称的所有标签
		// Iterator<Element> iterator = rootElement.elementIterator();
		// while (iterator.hasNext()) {
		// Element element = iterator.next();
		// System.out.println(element.getName());
		// }

		// 4获取当前标签下的所有子标签
		List<Element> list = rootElement.elements();
		// 遍历集合
		/*
		 * //第一种方式：普通for for (int i = 0; i < list.size(); i++) { Element
		 * element=list.get(i); System.out.println(element.getName()); }
		 */
		/*
		 * //第二种方式：增强for for(Element element:list){
		 * System.out.println(element.getName()); }
		 */
		/*
		 * //第三种方式：迭代器 Iterator<Element> iterator = list.iterator(); while
		 * (iterator.hasNext()) { Element element = (Element) iterator.next();
		 * System.out.println(element.getName()); }
		 */

		// 5更深层次的取标签
		Element nameElement = rootElement.element("contact").element("name");
		System.out.println(nameElement.getName());
	}

	/**
	 * 获取属性
	 * 
	 * @throws Exception
	 */
	@Test
	public void test4() throws Exception {
		// 创建xml解析器
		SAXReader reader = new SAXReader();
		// 读取xml文件并返回xml文档对象(document)
		Document document = reader.read(new File("./src/contact.xml"));

		// 获取标签对象(先获得属性所在的标签对象再获取属性)
		Element contactElement = document.getRootElement().element("contact");
		// 2得到属性
		// //2.1得到指定名称的属性值
		// String idValue=contactElement.attributeValue("id");
		// System.out.println(idValue);

		// //2.2得到指定属性名称的属性对象
		// Attribute attribute=contactElement.attribute("id");
		// System.out.println(attribute.getName()+"="+attribute.getValue());

		// 2.3得到所有的属性
		List<Attribute> list = contactElement.attributes();
		for (Attribute attribute : list) {
			System.out.println(attribute.getName() + "=" + attribute.getValue());
		}
	}

	/**
	 * 获取文本
	 * 
	 * @throws Exception
	 */
	@Test
	public void test5() throws Exception {
		// 创建xml解析器
		SAXReader reader = new SAXReader();
		// 读取xml文件并返回xml文档对象(document)
		Document document = reader.read(new File("./src/contact.xml"));
		
		//1获取文本（先获取标签，再获取标签上的文本）
		Element nameElement=document.getRootElement().element("contact").element("name");
		String text=nameElement.getText();
		System.out.println(text);
		
		//1.2. 得到指定子标签名的文本内容
		String text2=document.getRootElement().element("contact").elementText("name");
		System.out.println(text2);
	}
}
