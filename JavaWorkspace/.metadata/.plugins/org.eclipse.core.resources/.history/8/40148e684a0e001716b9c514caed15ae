package com.xml.sax;

import java.io.File;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

/**
 * @author lxp
 *
 * @TODO
 * 
 */
// SAX处理器程序
class MyDefaultHander extends DefaultHandler {
	//存储xml文档信息
	StringBuffer sb = new StringBuffer();
	
	
	public  String getContent() {
		
		return sb.toString();	
	}

	/**
	 * 开始标签
	 */
	@Override
	public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
			sb.append("<"+qName);
			//判断是否有属性
			if(attributes!=null){
				for(int i=0;i<attributes.getLength();i++){
					String attrName=attributes.getQName(i);
					String attrValue=attributes.getValue(i);
					sb.append(" "+attrName+"=\""+attrValue+"\"");
				}
			}
			sb.append(">");
	}

	/**
	 * 文本
	 * 
	 */
	@Override
	public void characters(char[] ch, int start, int length) throws SAXException {
		String Content=new String(ch, start, length);
		sb.append(Content);
	}

	/**
	 * 结束标签
	 */
	@Override
	public void endElement(String uri, String localName, String qName) throws SAXException {
		sb.append("</"+qName+">");
	}
}

public class SAX_Xml_Read {
	public static void main(String[] args) throws Exception {
		// 创建SAXPaser对象
		SAXParser parser = SAXParserFactory.newInstance().newSAXParser();
		// 调用paser方法
		parser.parse(new File("out.xml"),new MyDefaultHander());
		
		String xmlDate=new MyDefaultHander().getContent();
		System.out.println(xmlDate);

	}
}
